{"version":3,"sources":["webpack:///webpack/bootstrap 98474abeed95e1761693","webpack:///./game/lib/stage.js","webpack:///./game/lib/boss.js","webpack:///./game/lib/bullet.js","webpack:///./game/lib/enemies.js","webpack:///./game/lib/status.js","webpack:///./game/nexus.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;AACA;;AAEA;;AAEA;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;AAKA;;AAEA;;;;;;;;;;AC/FA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;ACpKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;AChDA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACtDA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AClBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","file":"./game/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 98474abeed95e1761693","import Boss from './boss';\nimport Enemy from './enemies';\n\nclass StageView {\n\n  constructor(stage) {\n    this.stage = stage;\n    this.enemies = [];Â \n    this.slain_enemies = [];\n    this.addBoss();\n    this.addEnemies();\n    this.addKeyEvents();\n    this.start();\n  }\n\n\n  addBoss() {\n    this.boss = new Boss();\n  }\n\n  addEnemies() {\n    for (let i = 0; i < 2 ; i++) {\n      this.enemies.push(new Enemy(this.boss.center));\n    }\n  }\n\n  detectCollisions() {\n    this.enemies.forEach((enemy) => {\n      if (enemy.alive) {\n        if (!((enemy.x_pos > this.boss.x_offset || enemy.x_offset < this.boss.x_pos) ||\n        (enemy.y_pos > this.boss.y_offset || enemy.y_offset < this.boss.y_pos))) {\n          this.slain_enemies.push(enemy);\n          enemy.alive = false;\n          this.boss.health -= 20;\n        } else {\n          this.boss.bullets.forEach((bullet) => {\n            if (!((enemy.x_pos > bullet.x_offset || enemy.x_offset < bullet.x_pos) ||\n            (enemy.y_pos > bullet.y_offset || enemy.y_offset < bullet.y_pos))) {\n              this.slain_enemies.push(enemy);\n              enemy.alive = false;\n            }\n          });\n        }\n      }\n\n    });\n  }\n\n  addKeyEvents() {\n    document.getElementsByTagName(\"body\")[0].addEventListener(\"keydown\", (e) => {\n      this.boss.keys[e.keyCode] = true;\n    });\n    document.getElementsByTagName(\"body\")[0].addEventListener(\"keyup\", (e) => {\n      this.boss.keys[e.keyCode] = false;\n    });\n    this.stage.canvas.addEventListener('click', (e) => {\n      // debugger\n      this.boss.shootBullet(e.offsetX, e.offsetY);\n    });\n  }\n\n  start() {\n     requestAnimationFrame(this.animate.bind(this));\n\n  }\n\n  animate(time) {\n    this.stage.clearRect(0, 0, 1300, 800);\n    this.stage.fillStyle = '#fde5c6';\n    this.stage.fillRect(0, 0, 1300, 800);\n    this.enemies.forEach((enemy) => {\n      if (enemy.alive) {\n        enemy.draw(this.stage);\n      }\n    });\n    if (this.slain_enemies.length === this.enemies.length) {\n      this.refresh_enemies();\n    }\n    this.boss.draw(this.stage);\n    this.detectCollisions();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  refresh_enemies() {\n    this.slain_enemies = [];\n    this.enemies.forEach((enemy) => {\n      enemy.reposition(this.boss.center);\n    });\n  }\n\n\n\n\n}\n\nexport default StageView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/lib/stage.js\n// module id = 0\n// module chunks = 0","import Bullet from './bullet';\nimport Status from './status';\nconst MAX_SPEED = 3;\n\nclass Boss {\n\n  constructor() {\n    this.x_vel = 0;\n    this.y_vel = 0;\n    this.x_pos = 600;\n    this.y_pos = 200;\n    this.width = 132;\n    this.height = 140;\n    this.dir = 'still';\n    this.x_offset = this.x_pos + this.width;\n    this.y_offset = this.y_pos + this.height;\n    this.set_center();\n    this.speed = 0.5;\n    this.friction = 0.92;\n    this.keys = {};\n    this.bullets = [];\n    this.setStatus();\n  }\n\n\n  setStatus() {\n    this.health = 100;\n    this.status = new Status();\n  }\n\n  shootBullet(x_offSet, y_offSet) {\n    // debugger\n    this.bullets.push(new Bullet(this.center, x_offSet, y_offSet));\n    // console.log(this.bullets);\n  }\n\n  set_center() {\n    this.center = [(this.x_offset + this.x_pos)/2, (this.y_offset + this.y_pos)/2];\n  }\n\n  update_movement() {\n    if (this.keys[65] && this.x_vel >= -1 * MAX_SPEED) {\n      this.x_vel -= this.speed;\n    }\n    if (this.keys[68] && this.x_vel <= MAX_SPEED) {\n      this.x_vel += this.speed;\n    }\n    if (this.keys[87] && this.y_vel >= -1 * MAX_SPEED) {\n      this.y_vel -= this.speed;\n    }\n    if (this.keys[83] && this.y_vel <= MAX_SPEED) {\n      this.y_vel += this.speed;\n    }\n    this.x_vel *= this.friction;\n    this.y_vel *= this.friction;\n  }\n\n  move() {\n    this.x_pos += this.x_vel;\n    this.y_pos += this.y_vel;\n\n  }\n\n  bind(stage) {\n    if (this.x_pos >= stage.canvas.width - 132) {\n      this.x_pos = stage.canvas.width - 132;\n    }\n    if (this.x_pos <= 0) {\n      this.x_pos = 0;\n    }\n    if (this.y_pos >= stage.canvas.height - 140) {\n      this.y_pos = stage.canvas.height - 140;\n    }\n    if (this.y_pos <= 0) {\n      this.y_pos = 0;\n    }\n  }\n\n  update_offset() {\n    this.x_offset = this.x_pos + this.width;\n    this.y_offset = this.y_pos + this.height;\n    this.set_center();\n    // console.log(this.center);\n  }\n\n  drawBullets(stage) {\n    this.bullets.forEach((bullet) => {\n      bullet.draw(stage);\n    });\n  }\n\n  draw(stage) {\n    let boss_img = new Image();\n    this.update_movement();\n    this.move();\n    this.bind(stage);\n    this.update_offset();\n    this.get_dir();\n    this.drawBullets(stage);\n    this.status.draw(stage, this.health);\n    boss_img.src = \"./assets/dragon_spritesheet.png\";\n    if (this.dir === 'east') {\n      stage.drawImage(boss_img, 0, 0, 102, 134, this.x_pos, this.y_pos, 102, 134);\n    }\n    else if (this.dir === 'west') {\n      stage.drawImage(boss_img, 103, 0, 102, 134, this.x_pos, this.y_pos, 102, 134);\n    }\n    else {\n      stage.drawImage(boss_img, 0, 135, 132, 140, this.x_pos, this.y_pos, 132, 140);\n    }\n  }\n\n  get_dir() {\n    let x_vel = this.x_vel;\n    let y_vel = this.y_vel;\n    // console.log(x_vel);\n    // console.log(y_vel);\n    if ((x_vel < 0.2 && x_vel > -0.2) && (y_vel < 0.2 && y_vel > -0.2)) {\n      this.dir = 'still';\n    }\n    else if (x_vel > 0) {\n      let tan_angle = Math.atan2(x_vel, y_vel) / Math.PI * 180;\n      // console.log(tan_angle);\n      if (tan_angle <= 22.5) {\n        this.dir = 'south';\n        //south\n      } else if (tan_angle <= 67.5) {\n        this.dir = 'east';\n        //southeast\n      } else if (tan_angle <= 112.5) {\n        this.dir = 'east';\n        //east\n      } else if (tan_angle <= 157.5) {\n        this.dir = 'east';\n        //northeast\n      } else if (tan_angle <= 180) {\n        this.dir = 'north';\n        //north\n      }\n    }\n    else if (x_vel < 0) {\n      let tan_angle = Math.atan2(x_vel, y_vel) / Math.PI * 180;\n      if (tan_angle >= -22.5) {\n        this.dir = 'south';\n        //south\n      } else if (tan_angle >= -67.5) {\n        this.dir = 'west';\n        //southwest\n      } else if (tan_angle >= -112.5) {\n        this.dir = 'west';\n        //west\n      } else if (tan_angle >= -157.5) {\n        this.dir = 'west';\n        //northwest\n      } else if (tan_angle >= -180) {\n        this.dir = 'north';\n        //north\n      }\n    }\n  }\n}\n\n\n\nexport default Boss;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/lib/boss.js\n// module id = 1\n// module chunks = 0","class Bullet {\n\n  constructor(boss_pos, x_offset, y_offset) {\n    this.height = 10;\n    this.width = 10;\n    this.x_pos = boss_pos[0];\n    this.y_pos = boss_pos[1];\n    this.x_offset = this.x_pos + this.width;\n    this.y_offset = this.y_pos + this.height;\n    this.set_velocity(this.x_pos - x_offset, this.y_pos - y_offset);\n    this.set_center();\n  }\n\n  set_velocity(x_offset, y_offset) {\n    let tan_angle = Math.atan2(x_offset, y_offset);\n    // console.log(tan_angle / Math.PI * 180);\n    this.x_vel = Math.sin(tan_angle) * -8;\n    this.y_vel = Math.cos(tan_angle) * -8;\n    // console.log(this.y_vel);\n    // debugger\n  }\n\n  set_center() {\n    this.center = [(this.x_offset + this.x_pos)/2, (this.y_offset + this.y_pos)/2];\n  }\n\n  update_offset() {\n    this.x_offset = this.x_pos + this.width;\n    this.y_offset = this.y_pos + this.height;\n    this.set_center();\n    // console.log(this.center);\n  }\n\n  update_movement() {\n    this.x_pos += this.x_vel;\n    this.y_pos += this.y_vel;\n  }\n\n  draw(stage) {\n    this.update_movement();\n    this.update_offset();\n    stage.fillStyle = \"red\";\n    stage.fillRect(this.x_pos, this.y_pos, this.height, this.width);\n  }\n\n}\n\n\nexport default Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/lib/bullet.js\n// module id = 2\n// module chunks = 0","const ENEMY_SPEED = 4;\n\nclass Enemy {\n\n  constructor(boss_center) {\n    this.x_pos = Math.floor(Math.random() * 1900);\n    this.y_pos = Math.floor(Math.random() * 900);\n    this.height = 50;\n    this.width = 50;\n    this.alive = true;\n    this.update_offset();\n    this.calculate_tan(boss_center);\n  }\n\n  draw(stage) {\n    this.update_position();\n    stage.fillStyle = \"red\";\n    stage.fillRect(this.x_pos, this.y_pos, this.height, this.width);\n  }\n\n  update_position() {\n    this.x_pos += this.x_vel;\n    this.y_pos += this.y_vel;\n    this.update_offset();\n\n  }\n\n  update_offset() {\n    this.x_offset = this.x_pos + this.width;\n    this.y_offset = this.y_pos + this.height;\n    this.set_center();\n  }\n\n  set_center() {\n    this.center = [(this.x_offset + this.x_pos)/2, (this.y_offset + this.y_pos)/2];\n  }\n\n  calculate_tan(boss_center) {\n    let triangle_x = boss_center[0] - this.center[0];\n    let triangle_y = boss_center[1] - this.center[1];\n    let tan_angle = Math.atan2(triangle_y, triangle_x);\n    this.x_vel = Math.cos(tan_angle) * ENEMY_SPEED;\n    this.y_vel = Math.sin(tan_angle) * ENEMY_SPEED;\n  }\n\n  reposition(boss_center) {\n    this.alive = true;\n    this.x_pos = Math.floor(Math.random() * 1900);\n    this.y_pos = Math.floor(Math.random() * 900);\n    this.update_offset();\n    this.calculate_tan(boss_center);\n  }\n\n}\n\nexport default Enemy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/lib/enemies.js\n// module id = 3\n// module chunks = 0","\nclass Status {\n\n  constructor() {\n\n  }\n\n  draw(stage, health) {\n    stage.font = '30px Arial';\n    stage.fillText(\"Health\", 10, 40);\n    stage.fillStyle = 'black';\n    stage.fillRect(9, 49, 302, 22);\n    stage.fillStyle = 'red';\n    stage.fillRect(10, 50, 3 * health, 20);\n  }\n\n}\n\nexport default Status;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/lib/status.js\n// module id = 4\n// module chunks = 0","import StageView from './lib/stage';\n\nconst GAME_WIDTH = 1300;\nconst GAME_HEIGHT = 800;\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  var canvas = document.getElementById(\"gameScreen\");\n  canvas.width = GAME_WIDTH;\n  canvas.height = GAME_HEIGHT;\n  const stage = canvas.getContext('2d');\n  new StageView(stage);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game/nexus.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}